<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Tests\Controllers;

use Core\TestCase\BodyMatchers\KeysBodyMatcher;
use Core\TestCase\TestParam;
use FortisAPILib\Controllers\PaylinksController;
use FortisAPILib\Exceptions;

class PaylinksControllerTest extends BaseTestController
{
    /**
     * @var PaylinksController PaylinksController instance
     */
    protected static $controller;

    /**
     * Setup test class
     */
    public static function setUpBeforeClass(): void
    {
        self::$controller = parent::getClient()->getPaylinksController();
    }

    public function testTestListAllPaylinks()
    {
        // Parameters for the API call
        $page = null;
        $sort = null;
        $filter = null;
        $expand = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->listAllPaylinks($page, $sort, $filter, $expand);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"PaylinksCollection","list":[{"location_id":"11e95f8ec39de8fbdb0a4f1a"' .
                ',"cc_product_transaction_id":"11e95f8ec39de8fbdb0a4f1a","email":"email@domain.c' .
                'om","amount_due":10,"contact_id":"11e95f8ec39de8fbdb0a4f1a","ach_product_transa' .
                'ction_id":"11e95f8ec39de8fbdb0a4f1a","expire_date":"2021-12-01","display_produc' .
                't_transaction_receipt_details":true,"display_billing_fields":true,"delivery_met' .
                'hod":0,"cell_phone":"3339998822","description":"Description","id":"11e95f8ec39d' .
                'e8fbdb0a4f1a","status_id":true,"active":true,"created_ts":1422040992,"modified_' .
                'ts":1422040992,"created_user_id":"11e95f8ec39de8fbdb0a4f1a","modified_user_id":' .
                '"11e95f8ec39de8fbdb0a4f1a"}],"links":{"type":"Links","first":"/v1/endpoint?page' .
                '[size]=10&page[number]=1","previous":"/v1/endpoint?page[size]=10&page[number]=5' .
                '","last":"/v1/endpoint?page[size]=10&page[number]=42"},"pagination":{"type":"Pa' .
                'gination","total_count":423,"page_count":42,"page_number":6,"page_size":10},"so' .
                'rt":{"type":"Sorting","fields":[{"field":"last_name","order":"asc"}]}}'
            )))
            ->assert();
    }

    public function testTestDeletePaylink()
    {
        // Parameters for the API call
        $paylinkId = '11e95f8ec39de8fbdb0a4f1a';

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->deletePaylink($paylinkId);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"Paylink","data":{"location_id":"11e95f8ec39de8fbdb0a4f1a","cc_product' .
                '_transaction_id":"11e95f8ec39de8fbdb0a4f1a","email":"email@domain.com","amount_' .
                'due":10,"contact_id":"11e95f8ec39de8fbdb0a4f1a","ach_product_transaction_id":"1' .
                '1e95f8ec39de8fbdb0a4f1a","expire_date":"2021-12-01","display_product_transactio' .
                'n_receipt_details":true,"display_billing_fields":true,"delivery_method":0,"cell' .
                '_phone":"3339998822","description":"Description","id":"11e95f8ec39de8fbdb0a4f1a' .
                '","status_id":true,"active":true,"created_ts":1422040992,"modified_ts":14220409' .
                '92,"created_user_id":"11e95f8ec39de8fbdb0a4f1a","modified_user_id":"11e95f8ec39' .
                'de8fbdb0a4f1a"}}'
            )))
            ->assert();
    }

    public function testTestViewSinglePaylink()
    {
        // Parameters for the API call
        $paylinkId = '11e95f8ec39de8fbdb0a4f1a';
        $expand = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->viewSinglePaylink($paylinkId, $expand);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"Paylink","data":{"location_id":"11e95f8ec39de8fbdb0a4f1a","cc_product' .
                '_transaction_id":"11e95f8ec39de8fbdb0a4f1a","email":"email@domain.com","amount_' .
                'due":10,"contact_id":"11e95f8ec39de8fbdb0a4f1a","ach_product_transaction_id":"1' .
                '1e95f8ec39de8fbdb0a4f1a","expire_date":"2021-12-01","display_product_transactio' .
                'n_receipt_details":true,"display_billing_fields":true,"delivery_method":0,"cell' .
                '_phone":"3339998822","description":"Description","id":"11e95f8ec39de8fbdb0a4f1a' .
                '","status_id":true,"active":true,"created_ts":1422040992,"modified_ts":14220409' .
                '92,"created_user_id":"11e95f8ec39de8fbdb0a4f1a","modified_user_id":"11e95f8ec39' .
                'de8fbdb0a4f1a"}}'
            )))
            ->assert();
    }

    public function testTestResendPaylink()
    {
        // Parameters for the API call
        $paylinkId = '11e95f8ec39de8fbdb0a4f1a';
        $expand = null;

        // Perform API call
        $result = null;
        try {
            $result = self::$controller->resendPaylink($paylinkId, $expand);
        } catch (Exceptions\ApiException $e) {
        }

        $headers = [];
        $headers['Content-Type'] = ['application/json', true];

        // Assert result with expected response
        $this->newTestCase($result)
            ->expectStatus(200)
            ->allowExtraHeaders()
            ->expectHeaders($headers)
            ->bodyMatcher(KeysBodyMatcher::init(TestParam::object(
                '{"type":"Paylink","data":{"location_id":"11e95f8ec39de8fbdb0a4f1a","cc_product' .
                '_transaction_id":"11e95f8ec39de8fbdb0a4f1a","email":"email@domain.com","amount_' .
                'due":10,"contact_id":"11e95f8ec39de8fbdb0a4f1a","ach_product_transaction_id":"1' .
                '1e95f8ec39de8fbdb0a4f1a","expire_date":"2021-12-01","display_product_transactio' .
                'n_receipt_details":true,"display_billing_fields":true,"delivery_method":0,"cell' .
                '_phone":"3339998822","description":"Description","id":"11e95f8ec39de8fbdb0a4f1a' .
                '","status_id":true,"active":true,"created_ts":1422040992,"modified_ts":14220409' .
                '92,"created_user_id":"11e95f8ec39de8fbdb0a4f1a","modified_user_id":"11e95f8ec39' .
                'de8fbdb0a4f1a"}}'
            )))
            ->assert();
    }
}
