<?php

declare(strict_types=1);

/*
 * FortisAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace FortisAPILib\Models;

use stdClass;

class V1PaylinksRequest1 implements \JsonSerializable
{
    /**
     * @var array
     */
    private $locationId = [];

    /**
     * @var array
     */
    private $ccProductTransactionId = [];

    /**
     * @var array
     */
    private $email = [];

    /**
     * @var array
     */
    private $amountDue = [];

    /**
     * @var array
     */
    private $locationApiId = [];

    /**
     * @var array
     */
    private $contactId = [];

    /**
     * @var array
     */
    private $contactApiId = [];

    /**
     * @var array
     */
    private $paylinkApiId = [];

    /**
     * @var array
     */
    private $achProductTransactionId = [];

    /**
     * @var array
     */
    private $expireDate = [];

    /**
     * @var bool|null
     */
    private $displayProductTransactionReceiptDetails;

    /**
     * @var bool|null
     */
    private $displayBillingFields;

    /**
     * @var array
     */
    private $deliveryMethod = [];

    /**
     * @var array
     */
    private $cellPhone = [];

    /**
     * @var array
     */
    private $description = [];

    /**
     * Returns Location Id.
     * Location ID
     */
    public function getLocationId(): ?string
    {
        if (count($this->locationId) == 0) {
            return null;
        }
        return $this->locationId['value'];
    }

    /**
     * Sets Location Id.
     * Location ID
     *
     * @maps location_id
     */
    public function setLocationId(?string $locationId): void
    {
        $this->locationId['value'] = $locationId;
    }

    /**
     * Unsets Location Id.
     * Location ID
     */
    public function unsetLocationId(): void
    {
        $this->locationId = [];
    }

    /**
     * Returns Cc Product Transaction Id.
     * cc_product_transaction_id
     */
    public function getCcProductTransactionId(): ?string
    {
        if (count($this->ccProductTransactionId) == 0) {
            return null;
        }
        return $this->ccProductTransactionId['value'];
    }

    /**
     * Sets Cc Product Transaction Id.
     * cc_product_transaction_id
     *
     * @maps cc_product_transaction_id
     */
    public function setCcProductTransactionId(?string $ccProductTransactionId): void
    {
        $this->ccProductTransactionId['value'] = $ccProductTransactionId;
    }

    /**
     * Unsets Cc Product Transaction Id.
     * cc_product_transaction_id
     */
    public function unsetCcProductTransactionId(): void
    {
        $this->ccProductTransactionId = [];
    }

    /**
     * Returns Email.
     * Email
     */
    public function getEmail(): ?string
    {
        if (count($this->email) == 0) {
            return null;
        }
        return $this->email['value'];
    }

    /**
     * Sets Email.
     * Email
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email['value'] = $email;
    }

    /**
     * Unsets Email.
     * Email
     */
    public function unsetEmail(): void
    {
        $this->email = [];
    }

    /**
     * Returns Amount Due.
     * Amount Due
     */
    public function getAmountDue(): ?float
    {
        if (count($this->amountDue) == 0) {
            return null;
        }
        return $this->amountDue['value'];
    }

    /**
     * Sets Amount Due.
     * Amount Due
     *
     * @maps amount_due
     */
    public function setAmountDue(?float $amountDue): void
    {
        $this->amountDue['value'] = $amountDue;
    }

    /**
     * Unsets Amount Due.
     * Amount Due
     */
    public function unsetAmountDue(): void
    {
        $this->amountDue = [];
    }

    /**
     * Returns Location Api Id.
     * Location Api Id
     */
    public function getLocationApiId(): ?string
    {
        if (count($this->locationApiId) == 0) {
            return null;
        }
        return $this->locationApiId['value'];
    }

    /**
     * Sets Location Api Id.
     * Location Api Id
     *
     * @maps location_api_id
     */
    public function setLocationApiId(?string $locationApiId): void
    {
        $this->locationApiId['value'] = $locationApiId;
    }

    /**
     * Unsets Location Api Id.
     * Location Api Id
     */
    public function unsetLocationApiId(): void
    {
        $this->locationApiId = [];
    }

    /**
     * Returns Contact Id.
     * Contact Id
     */
    public function getContactId(): ?string
    {
        if (count($this->contactId) == 0) {
            return null;
        }
        return $this->contactId['value'];
    }

    /**
     * Sets Contact Id.
     * Contact Id
     *
     * @maps contact_id
     */
    public function setContactId(?string $contactId): void
    {
        $this->contactId['value'] = $contactId;
    }

    /**
     * Unsets Contact Id.
     * Contact Id
     */
    public function unsetContactId(): void
    {
        $this->contactId = [];
    }

    /**
     * Returns Contact Api Id.
     * Contact Api Id
     */
    public function getContactApiId(): ?string
    {
        if (count($this->contactApiId) == 0) {
            return null;
        }
        return $this->contactApiId['value'];
    }

    /**
     * Sets Contact Api Id.
     * Contact Api Id
     *
     * @maps contact_api_id
     */
    public function setContactApiId(?string $contactApiId): void
    {
        $this->contactApiId['value'] = $contactApiId;
    }

    /**
     * Unsets Contact Api Id.
     * Contact Api Id
     */
    public function unsetContactApiId(): void
    {
        $this->contactApiId = [];
    }

    /**
     * Returns Paylink Api Id.
     * Paylinke Api Id
     */
    public function getPaylinkApiId(): ?string
    {
        if (count($this->paylinkApiId) == 0) {
            return null;
        }
        return $this->paylinkApiId['value'];
    }

    /**
     * Sets Paylink Api Id.
     * Paylinke Api Id
     *
     * @maps paylink_api_id
     */
    public function setPaylinkApiId(?string $paylinkApiId): void
    {
        $this->paylinkApiId['value'] = $paylinkApiId;
    }

    /**
     * Unsets Paylink Api Id.
     * Paylinke Api Id
     */
    public function unsetPaylinkApiId(): void
    {
        $this->paylinkApiId = [];
    }

    /**
     * Returns Ach Product Transaction Id.
     * Ach Product Transaction Id
     */
    public function getAchProductTransactionId(): ?string
    {
        if (count($this->achProductTransactionId) == 0) {
            return null;
        }
        return $this->achProductTransactionId['value'];
    }

    /**
     * Sets Ach Product Transaction Id.
     * Ach Product Transaction Id
     *
     * @maps ach_product_transaction_id
     */
    public function setAchProductTransactionId(?string $achProductTransactionId): void
    {
        $this->achProductTransactionId['value'] = $achProductTransactionId;
    }

    /**
     * Unsets Ach Product Transaction Id.
     * Ach Product Transaction Id
     */
    public function unsetAchProductTransactionId(): void
    {
        $this->achProductTransactionId = [];
    }

    /**
     * Returns Expire Date.
     * Expire Date
     */
    public function getExpireDate(): ?string
    {
        if (count($this->expireDate) == 0) {
            return null;
        }
        return $this->expireDate['value'];
    }

    /**
     * Sets Expire Date.
     * Expire Date
     *
     * @maps expire_date
     */
    public function setExpireDate(?string $expireDate): void
    {
        $this->expireDate['value'] = $expireDate;
    }

    /**
     * Unsets Expire Date.
     * Expire Date
     */
    public function unsetExpireDate(): void
    {
        $this->expireDate = [];
    }

    /**
     * Returns Display Product Transaction Receipt Details.
     * Display Product Transaction Receipt Details
     */
    public function getDisplayProductTransactionReceiptDetails(): ?bool
    {
        return $this->displayProductTransactionReceiptDetails;
    }

    /**
     * Sets Display Product Transaction Receipt Details.
     * Display Product Transaction Receipt Details
     *
     * @maps display_product_transaction_receipt_details
     */
    public function setDisplayProductTransactionReceiptDetails(?bool $displayProductTransactionReceiptDetails): void
    {
        $this->displayProductTransactionReceiptDetails = $displayProductTransactionReceiptDetails;
    }

    /**
     * Returns Display Billing Fields.
     * Display Billing Fields
     */
    public function getDisplayBillingFields(): ?bool
    {
        return $this->displayBillingFields;
    }

    /**
     * Sets Display Billing Fields.
     * Display Billing Fields
     *
     * @maps display_billing_fields
     */
    public function setDisplayBillingFields(?bool $displayBillingFields): void
    {
        $this->displayBillingFields = $displayBillingFields;
    }

    /**
     * Returns Delivery Method.
     * Delivery Method
     * >0 - Do not send
     * >
     * >1 - Email
     * >
     * >2 - SMS
     * >
     * >3 - Both
     * >
     */
    public function getDeliveryMethod(): ?int
    {
        if (count($this->deliveryMethod) == 0) {
            return null;
        }
        return $this->deliveryMethod['value'];
    }

    /**
     * Sets Delivery Method.
     * Delivery Method
     * >0 - Do not send
     * >
     * >1 - Email
     * >
     * >2 - SMS
     * >
     * >3 - Both
     * >
     *
     * @maps delivery_method
     * @factory \FortisAPILib\Models\DeliveryMethodEnum::checkValue
     */
    public function setDeliveryMethod(?int $deliveryMethod): void
    {
        $this->deliveryMethod['value'] = $deliveryMethod;
    }

    /**
     * Unsets Delivery Method.
     * Delivery Method
     * >0 - Do not send
     * >
     * >1 - Email
     * >
     * >2 - SMS
     * >
     * >3 - Both
     * >
     */
    public function unsetDeliveryMethod(): void
    {
        $this->deliveryMethod = [];
    }

    /**
     * Returns Cell Phone.
     * Cell Phone
     */
    public function getCellPhone(): ?string
    {
        if (count($this->cellPhone) == 0) {
            return null;
        }
        return $this->cellPhone['value'];
    }

    /**
     * Sets Cell Phone.
     * Cell Phone
     *
     * @maps cell_phone
     */
    public function setCellPhone(?string $cellPhone): void
    {
        $this->cellPhone['value'] = $cellPhone;
    }

    /**
     * Unsets Cell Phone.
     * Cell Phone
     */
    public function unsetCellPhone(): void
    {
        $this->cellPhone = [];
    }

    /**
     * Returns Description.
     * Description
     */
    public function getDescription(): ?string
    {
        if (count($this->description) == 0) {
            return null;
        }
        return $this->description['value'];
    }

    /**
     * Sets Description.
     * Description
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description['value'] = $description;
    }

    /**
     * Unsets Description.
     * Description
     */
    public function unsetDescription(): void
    {
        $this->description = [];
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->locationId)) {
            $json['location_id']                                 = $this->locationId['value'];
        }
        if (!empty($this->ccProductTransactionId)) {
            $json['cc_product_transaction_id']                   = $this->ccProductTransactionId['value'];
        }
        if (!empty($this->email)) {
            $json['email']                                       = $this->email['value'];
        }
        if (!empty($this->amountDue)) {
            $json['amount_due']                                  = $this->amountDue['value'];
        }
        if (!empty($this->locationApiId)) {
            $json['location_api_id']                             = $this->locationApiId['value'];
        }
        if (!empty($this->contactId)) {
            $json['contact_id']                                  = $this->contactId['value'];
        }
        if (!empty($this->contactApiId)) {
            $json['contact_api_id']                              = $this->contactApiId['value'];
        }
        if (!empty($this->paylinkApiId)) {
            $json['paylink_api_id']                              = $this->paylinkApiId['value'];
        }
        if (!empty($this->achProductTransactionId)) {
            $json['ach_product_transaction_id']                  = $this->achProductTransactionId['value'];
        }
        if (!empty($this->expireDate)) {
            $json['expire_date']                                 = $this->expireDate['value'];
        }
        if (isset($this->displayProductTransactionReceiptDetails)) {
            $json['display_product_transaction_receipt_details'] = $this->displayProductTransactionReceiptDetails;
        }
        if (isset($this->displayBillingFields)) {
            $json['display_billing_fields']                      = $this->displayBillingFields;
        }
        if (!empty($this->deliveryMethod)) {
            $json['delivery_method']                             =
                DeliveryMethodEnum::checkValue(
                    $this->deliveryMethod['value']
                );
        }
        if (!empty($this->cellPhone)) {
            $json['cell_phone']                                  = $this->cellPhone['value'];
        }
        if (!empty($this->description)) {
            $json['description']                                 = $this->description['value'];
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
